name: Update Test

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Print Env
        env:
          GHREF: ${{ github.ref }}
        run: echo "$GHREF"

      - uses: actions/cache@v3
        id: docker-build-cache
        with:
          path: .github/docker-build-cache
          key: ${{ runner.os }}-docker-build-cache-${{ hashFiles('.github/workflows/main.yml', 'Dockerfile', 'package.json', 'yarn.lock', 'package-lock.json', 'pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-docker-build-cache-

      - name: Deploy to server
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          GHREF: ${{ github.ref }}
        run: |
          set -eux

          case "$GHREF" in
          refs/heads/master)    IMAGE=backend-setoko ;;
          refs/heads/staging) IMAGE=backend-setoko-staging ;;
          *) echo "unknow git ref target" >&2 && exit 1 ;;
          esac

          # prepare ssh master and port forward
          printf %s\\n "$SSH_PRIVATE_KEY" > .github/ssh_key
          chmod 0600 .github/ssh_key
          ssh_master=(
            -o "StrictHostKeyChecking accept-new"
            -o "ControlMaster yes"
            -o "ControlPath $PWD/.github/ssh_control"
            -o "ConnectTimeout 10"
            -i "$PWD/.github/ssh_key"
            -NTf -L 5000:127.0.0.1:5000
            "$REMOTE_USER@$REMOTE_HOST"
          )
          ssh_slave=(
            -i "$PWD/.github/ssh_key"
            "$REMOTE_USER@$REMOTE_HOST"
          )
          ssh "${ssh_master[@]}"

          # update it
          ssh "${ssh_slave[@]}" pwd
          ssh "${ssh_slave[@]}" ./app-docker/$IMAGE/app rotate_and_update
